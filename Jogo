import random

################################
# Variaveis                    #
#                              #
################################
lista_medidor = (0,1,2,3,4,5)
medidor_paz = random.choice(lista_medidor)
medidor_guerra = random.choice(lista_medidor)

################################
# Niveis iniciais              #
#                              #
################################
nv_quartel = 0
nv_estabulo = 0
num_soldados = 0
diplomacia = 0

################################
#Intro do Jogo                 #
################################
print("TEXTO DE INTRODUÇÃO PARA O JOGO")



################################
# Dados do jogador             #
#                              #
################################
Nome = input("Digite seu nome aqui: ")
Sexo = input("Você é (H)omem OU (M)ulher? ")
################################

################################
# Caso escolha sexo errado     #
#                              #
################################
Continuar = False
while Continuar == False:
 if Sexo == "Homem" or Sexo == "H" :
    Continuar = True
 elif Sexo == "Mulher" or Sexo == "M" :
    Continuar = True
 else:
    Sexo= input("Digite Homem ou Mulher, ou ainda H ou M, para continuar. (H/M) :")
    Continuar = False

################################
# Classe do jogador            #
#                              #
################################
class Lord:
    def __init__(self, name):
     if Sexo == "Homem" or Sexo == "H":
         self.name = "Senhor" + " "  + name
     if Sexo == "Mulher" or Sexo == "M":
         self.name = "Senhora" + " " + name
    
################################
# Definição dos medidores      #
#                              #
################################
    def medidor(self):
     self.medidor = print("Seu medidor de paz está em : ", medidor_paz, "/", "Seu Medidor de guerra está em : ", medidor_guerra)

################################
# Preparar para guerra ou paz  #
#                              #
################################     
    def guerra_ou_paz(self):
        guerra = False
        if medidor_guerra > medidor_paz:
            if medidor_guerra > 3:
                guerra = True
            elif medidor_guerra < 2:
                guerra = False
        elif medidor_guerra > 3:
            x = medidor_guerra - medidor_paz
            if x > 2:
                guerra = True
            else:
                guerra = False

        if guerra == True:
            print("Você precisa se preparar pra guerra!")
        else:
            print("Aproveite a paz! Evolua suas fazendas")
            
################################
# Teste do Objetivo            #
#                              #
################################
def testar_objetivo():
 if objetivo == "Evoluir quarteis":
    if nv_quartel == 2:
        print("muito bom!")
    else:
        print("Você ainda precisa evoluir mais!")
 elif objetivo == "Evoluir estabulo":
    if nv_estabulo == 2:
        print("muito bom!")
    else:
        print("Você ainda precisa evoluir mais!")
 elif objetivo == "Treinar Mais soldados":
    if num_soldados == 20:
        print("muito bom!")
    else:
        print("Você ainda precisa evoluir mais!")
 elif objetivo == "Diplomacia":
    if diplomacia == 2:
        print("muito bom!")
    else:
        print("Você não conquistou o titulo de diplomata ainda! Conheça mais povos")

        

################################
# Inicio do jogo!              #
# Definição da Classe do PJ    #
################################
personagem = Lord(Nome)

################################
# Info inicial para o PJ       #
#                              #
################################
print(personagem.name)
personagem.medidor()
personagem.guerra_ou_paz()
iniciar_objetivo = True

################################
# Criação do Objetivo          #
#                              #
################################
while iniciar_objetivo == True:
 termos_de_guerra = ("Evoluir quarteis", "Evoluir estabulo", "Diplomacia", "Treinar mais soldados")
 objetivo = random.choice(termos_de_guerra)
 print("Você deve - ", objetivo)
 aceitar_destino = input("Você aceita seu destino? (S/N):")
 if aceitar_destino == "S":
  print("Vamos começar!")
  iniciar_jogo = True
  iniciar_objetivo = False
 else:
  print("Volte quando estiver pronto")
  iniciar_jogo = False
  iniciar_objetivo = False

################################
#Primeiro Teste de Objetivo    #
################################
testar_objetivo()

################################
#Definições das fases          #
################################
def evento_aleatorio():
    lista_evento = ("ataque inesperado", "fome entre os servos", "doenças infecciosas")
    evento_escolhido = random.choice(lista_evento)
    return evento_escolhido
    
def fase_01():
    global nv_quartel
    global nv_estabulo
    global num_soldados
    global diplomacia
    
    print("inicio da fase, texto de abertura")
    escolha_01= input("O que você quer evoluir primeiro: 1 para quartel/2 para estabulo/3 para soldados/4 para buscar diplomacia ")
    if escolha_01 == 1:
    	print("voce evoluiu o Quartel em 1")
    	nv_quartel = nv_quartel + 1
    elif escolha_01 == 2:
    	print("voce evoluiu o Estabulo em 1")
    	nv_estabulo = nv_estabulo + 1
    elif escolha_01 == 3:
    	print("voce contratou mais 10 soldados")
    	num_soldados = num_soldados + 1
    elif escolha_01 == 4:
    	print("voce fez diplomacia com um novo país")
    	diplomacia = diplomacia + 1
    elif int(escolha_01) > 5 or int(escolha_01) < 1:
    	escolha_01 = input ("digite um valor valido (1 , 2 , 3 ou 4 ")
    print("Agora voce pode continuar expandindo seu imperio... mas antes vamos ver o que esta acontecendo por la")
    print(evento_aleatorio())
    
    #pode escolher mais uma vez uma das opções.


################################
#Inicio do Jogo                #
################################
while iniciar_jogo == True:
    fase_01()
    print("final")
    input("voce curtiu?")
    print("seu nivel do quartel")
    print(nv_quartel)
    iniciar_jogo = False
  #  fase_02()
 #   fase_03()
 #   fase_04()
  #  fase_final()
